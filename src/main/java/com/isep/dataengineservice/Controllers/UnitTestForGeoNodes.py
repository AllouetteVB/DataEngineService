import math

# Function to calculate the distance between two geoPositions
def distance(lat1, lon1, lat2, lon2):
    R = 6371  # radius of the Earth in kilometers
    dLat = math.radians(lat2 - lat1)
    dLon = math.radians(lon2 - lon1)
    lat1 = math.radians(lat1)
    lat2 = math.radians(lat2)
    a = math.sin(dLat/2) * math.sin(dLat/2) + math.sin(dLon/2) * math.sin(dLon/2) * math.cos(lat1) * math.cos(lat2)
    c = 2 * math.atan2(math.sqrt(a), math.sqrt(1-a))
    distance = R * c * 1000  # convert to meters
    return distance

# GeoPositions
positions = [
(48.835407423336996, 2.485428450102745),
(48.87139319911466, 2.3761453349783324),
(48.72749854184642, 2.403334003356804),
(48.99730145694701, 2.348799999999983),
(48.99729820956758, 2.376214388186554),
(48.74549140728976, 2.348799999999983),
(48.781451380410374, 2.4579852070575043),
(48.96131886291733, 2.4309838235584493),
(48.727504975171385, 2.348799999999983),
(48.781457825967706, 2.4033926070341067),
(48.85339384522391, 2.4854775292864133),
(48.87137380110008, 2.5402173077416137),
(48.871377034101585, 2.512871983365244),
(48.69153211093465, 2.348799999999983),
(48.835410652245194, 2.4581027636047565),
(48.943342160591875, 2.348799999999983),
(48.8713835001057, 2.458181329311401),
(48.835400965521714, 2.5400798178150126),
(48.83542033897196, 2.376125693543031),
(48.817427455169835, 2.4307476570402287),
(48.97931177950732, 2.376204493991395),
(48.90736605925146, 2.376165015464835),
(48.8893796291838, 2.376155170333959),
(48.799434579541156, 2.4853304377415952),
(48.87137056809893, 2.5675626303510626),
(48.74548496988976, 2.4033535185556048),
(48.76347461866898, 2.3760865274281286),
(48.88936668897566, 2.4855758339710974),
(48.96132210618127, 2.403589217487024),
(48.853400307133235, 2.430806522864259),
(48.90735958504522, 2.430895041076269),
(48.81742100144273, 2.485379419608421),
(48.92534601100703, 2.430924605823634),
(48.9433356781732, 2.40356946842644),
(48.85340676904404, 2.3761355093855627),
(48.70951854305302, 2.348799999999983),
(48.871396432118374, 2.348799999999983),
(48.96132534944557, 2.37619460963424),
(48.8174145477171, 2.540011175143036),
(48.72750175850872, 2.376067002550485),
(48.79943780436117, 2.4580243537043316),
(48.8533906142698, 2.5128130298513724),
(48.763471397930196, 2.4033730531064066),
(48.8713899661113, 2.4034906681896473),
(48.871386733108324, 2.4308359996340414),
(48.92534277185228, 2.458299470880206),
(48.85338415236268, 2.5674840256888274),
(48.781448157632255, 2.485281504440195),
(48.853387383316054, 2.5401485286521392),
(48.85340353808845, 2.40347101700695),
(48.817430682033944, 2.403431773118541),
(48.97930853418638, 2.403608986198492),
(48.799444254002296, 2.403412180363148),
(48.81743713576324, 2.348799999999983),
(48.92535248931764, 2.3761748703834655),
(48.81743390889841, 2.376115887438459),
(48.9253557284735, 2.348799999999983),
(48.889376394131205, 2.4035103388980588),
(48.78146427152651, 2.348799999999983),
(48.943329195756, 2.458338929738602),
(48.709515328426406, 2.3760572546134426),
(48.88938286423675, 2.348799999999983),
(48.781454603188855, 2.4306889079221037),
(48.90736929635513, 2.348799999999983),
(48.90735311084046, 2.485625059596714),
(48.74548818858958, 2.37607676015125),
(48.83542356788162, 2.348799999999983),
(48.76346495645373, 2.4579460992135864),
(48.853380921409666, 2.594819520961437),
(48.835404194429174, 2.512754134839497),
(48.88936345392455, 2.51293099545569),
(48.835417110062664, 2.4034513853248427),
(48.88937315907899, 2.4308655056922817),
(48.799441029181544, 2.430718267911516),
(48.81741777457974, 2.5126952982549255),
(48.96132859271025, 2.348799999999983),
(48.763468177191776, 2.4306595770349304),
(48.88936992402714, 2.458220670716628),
(48.97931502482863, 2.348799999999983),
(48.7994474788234, 2.3761060910593415),
(48.87138026710346, 2.4855266572218397),
(48.81742422830611, 2.458063539203522),
(48.85339707617839, 2.4581420269573755),
(48.79943135472151, 2.5126365200233067),
(48.9253395326979, 2.4856743341611036),
(48.943338919382356, 2.37618473510247),
(48.853410000000004, 2.348799999999983),
(49.015287889065384, 2.348799999999983),
(48.79945070364487, 2.348799999999983),
(48.78146104874693, 2.3760963043934),
(48.90735634794266, 2.458260051222851),
(48.76347783940813, 2.348799999999983),
(48.83541388115374, 2.430777075345418),
(48.94333243696442, 2.4309541999717794),
(48.88936021887382, 2.5402861551704063),
(48.92534925016215, 2.403549738991387),
(48.835397736614624, 2.5674054990292916),
(48.907349873738646, 2.5129900661977445),
(48.90736282214816, 2.4035300291569683),
(48.74548175119031, 2.430630275212934)
]

# Check if any pair of circles intersect
for i in range(len(positions)):
    for j in range(i+1, len(positions)):
        d = distance(positions[i][0], positions[i][1], positions[j][0], positions[j][1])
        if d <= 500:  # the sum of the radii is 1000 meters
            print("Circles", i, "and", j, "intersect.")
